#LUNA, JHON CARLO C.
#MAGDALUYO, WENDELL
#BET-COET-C-2A

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LogIn.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QInputDialog, QApplication
import mysql.connector as mdb
from mysql.connector import errorcode
from datetime import date

class Ui_logwindow(QtWidgets.QMainWindow):

    def setuplogin(self, MainWindow):
        self.connect()
        self.getuser()
        self.getpass()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(459, 471)
        MainWindow.setStyleSheet("background-color: rgb(180, 236, 243);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(320, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 3, 4, 1, 1)
        self.gridLayout_14 = QtWidgets.QGridLayout()
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.gridLayout_2.addLayout(self.gridLayout_14, 5, 2, 1, 1)
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.gridLayout_2.addLayout(self.gridLayout_13, 3, 3, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 120, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout_2.addItem(spacerItem1, 1, 2, 1, 1)
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.gridLayout_2.addLayout(self.gridLayout_12, 0, 2, 1, 1)
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.gridLayout_2.addLayout(self.gridLayout_11, 3, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 120, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout_2.addItem(spacerItem2, 4, 2, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet("background-color: rgb(153, 153, 153);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.LoginButton = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LoginButton.sizePolicy().hasHeightForWidth())
        self.LoginButton.setSizePolicy(sizePolicy)
        self.LoginButton.setMinimumSize(QtCore.QSize(0, 40))
        self.LoginButton.setMaximumSize(QtCore.QSize(16777215, 80))
        self.LoginButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LoginButton.setStyleSheet("background-color: rgb(0, 159, 159);\n"
"font: 12pt \"Times New Roman\";")
        self.LoginButton.setObjectName("LoginButton")
        self.LoginButton.clicked.connect(self.LOGIN)
        self.gridLayout_7.addWidget(self.LoginButton, 0, 0, 1, 2)
        self.gridLayout_5.addLayout(self.gridLayout_7, 2, 0, 1, 3)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_6.addWidget(self.label, 1, 0, 1, 1)
        self.userentry = QtWidgets.QLineEdit(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.userentry.sizePolicy().hasHeightForWidth())
        self.userentry.setSizePolicy(sizePolicy)
        self.userentry.setMinimumSize(QtCore.QSize(0, 40))
        self.userentry.setMaximumSize(QtCore.QSize(16777215, 60))
        self.userentry.setStyleSheet("font: 11pt \"Arial\";\n"
"background-color: rgb(255, 255, 255);")
        self.userentry.setClearButtonEnabled(True)
        self.userentry.setObjectName("userentry")
        self.gridLayout_6.addWidget(self.userentry, 0, 1, 1, 2)
        self.passwordentry = QtWidgets.QLineEdit(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.passwordentry.sizePolicy().hasHeightForWidth())
        self.passwordentry.setSizePolicy(sizePolicy)
        self.passwordentry.setMinimumSize(QtCore.QSize(0, 40))
        self.passwordentry.setMaximumSize(QtCore.QSize(16777215, 60))
        self.passwordentry.setStyleSheet("font: 11pt \"Arial\";\n"
"background-color: rgb(255, 255, 255);")
        self.passwordentry.setClearButtonEnabled(True)
        self.passwordentry.setObjectName("passwordentry")
        self.gridLayout_6.addWidget(self.passwordentry, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_6.addWidget(self.label_2, 0, 0, 1, 1)
        self.echobutton = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.echobutton.sizePolicy().hasHeightForWidth())
        self.echobutton.setSizePolicy(sizePolicy)
        self.echobutton.setMinimumSize(QtCore.QSize(20, 20))
        self.echobutton.setMaximumSize(QtCore.QSize(40, 60))
        self.echobutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.echobutton.setText("")
        self.echobutton.clicked.connect(self.echo)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Echologo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.echobutton.setIcon(icon)
        self.echobutton.setIconSize(QtCore.QSize(50, 50))
        self.echobutton.setFlat(True)
        self.echobutton.setObjectName("pushButton")
        self.gridLayout_6.addWidget(self.echobutton, 1, 2, 1, 1)
        self.gridLayout_6.setColumnStretch(0, 2)
        self.gridLayout_6.setColumnStretch(1, 4)
        self.gridLayout_6.setColumnStretch(2, 1)
        self.gridLayout_5.addLayout(self.gridLayout_6, 1, 0, 1, 3)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setStyleSheet("font: 75 24pt \"Times New Roman\";")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_4.addWidget(self.label_3, 0, 1, 1, 1)
        self.line = QtWidgets.QFrame(self.frame_2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 1, 0, 1, 2)
        self.label_4 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setMaximumSize(QtCore.QSize(80, 50))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("Logo.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.gridLayout_4.addWidget(self.label_4, 0, 0, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_4, 0, 0, 1, 3)
        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setMaximumSize(QtCore.QSize(80, 16777215))
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_9.addWidget(self.label_5, 0, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem3, 0, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem4, 0, 3, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_9, 3, 0, 1, 3)
        self.gridLayout_5.setRowStretch(0, 1)
        self.gridLayout_5.setRowStretch(1, 5)
        self.gridLayout_5.setRowStretch(2, 2)
        self.gridLayout_5.setRowStretch(3, 1)
        self.gridLayout_3.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 3, 2, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(320, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem5, 3, 1, 1, 1)
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem6, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_8, 2, 2, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 459, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.passwordentry.setEchoMode(QtWidgets.QLineEdit.Password)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.echocounter = 0

    def connect(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def getpass(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
            self.cur.execute("SELECT password FROM admin")
            self.getpassword = self.cur.fetchone()
            self.password=(self.getpassword[0])
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def getuser(self):
        try:
            self.cur.execute("SELECT username FROM admin")
            self.getusername = self.cur.fetchone()
            self.username=(self.getusername[0])
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def LOGIN(self):
        self.getuser()
        self.getpass()
        self.userlist = self.username
        self.passlist = self.password
        userentry = self.userentry
        passwordentry = self.passwordentry
        if userentry.text() and passwordentry.text():
            if userentry.text() == self.userlist:
                if passwordentry.text() == self.passlist:
                    msg = QMessageBox()
                    msg.setWindowTitle("Success")
                    msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                    msg.setText("LogIn Success!")
                    msg.setIcon(QMessageBox.Information)
                    x = msg.exec_()
                    self.userentry.clear()
                    self.passwordentry.clear()
                    MainWindow.hide()
                    MW_Transaction.show()
                else:
                    msg = QMessageBox()
                    msg.setWindowTitle("LogIn Failed")
                    msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                    msg.setText("Password Incorrect!")
                    msg.setIcon(QMessageBox.Critical)
                    x = msg.exec_()
            else:
                msg = QMessageBox()
                msg.setWindowTitle("LogIn Failed")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Username not found!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
        else:
            msg = QMessageBox()
            msg.setWindowTitle("LogIn Failed")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setText("Fill every needed details!")
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()

    def echo(self):
        if self.echocounter == 1:
            self.passwordentry.setEchoMode(QtWidgets.QLineEdit.Password)
            self.echocounter -= 1
        else:
            self.passwordentry.setEchoMode(QtWidgets.QLineEdit.Normal)
            self.echocounter += 1

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowIcon(QtGui.QIcon("Logo.png"))
        MainWindow.setWindowTitle(_translate("MainWindow", "MARGIES VEGGIES"))
        self.LoginButton.setText(_translate("MainWindow", "LOGIN"))
        self.LoginButton.setShortcut(_translate("MainWindow", "Return"))
        self.label.setText(_translate("MainWindow", "PASSWORD:"))
        self.userentry.setPlaceholderText(_translate("MainWindow", "Input Username"))
        self.passwordentry.setPlaceholderText(_translate("MainWindow", "Input Password"))
        self.label_2.setText(_translate("MainWindow", "USERNAME:"))
        self.label_3.setText(_translate("MainWindow", "ADMIN LOGIN"))

    def loginexitmbox(self):
        MainWindow.close()

class Ui_MW_Transaction(QtWidgets.QMainWindow):

    def openpl(self):
            Pricelist.show()

    def opensr(self):
            SalesRecord.show()

    def opensm(self):
            StockManagement.show()

    def openad(self):
            Admin.show()

    def setupmw(self, MW_Transaction):
        MW_Transaction.setWindowModality(QtCore.Qt.ApplicationModal)
        self.connect()
        self.itemlist1 = ['Item List']
        # ======================================SAMPLE=================================
        self.bill = 0
        self.change = 0
        self.cbill = 0
        self.tbill = str(self.bill)
        self.tchange = str(self.change)
        self.cprice = 0
        self.torder = 0
        self.row = 0
        self.computeindicator = 0
        self.corder = []
        self.tlorder = []
        self.ordereditem = []
        self.orderedquantity = []
        # =========================================================================
        MW_Transaction.setObjectName("MW_Transaction")
        self.resize(806, 645)
        MW_Transaction.setStyleSheet("background-color: rgb(180, 236, 243);")
        self.centralwidget = QtWidgets.QWidget(MW_Transaction)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet("background-color: rgb(153, 153, 153);\n"
"alternate-background-color: rgb(102, 64, 255);\n"
"border-color: rgb(255, 255, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.frame_3 = QtWidgets.QFrame(self.frame)
        self.frame_3.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setLineWidth(1)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.PRICELISTbutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PRICELISTbutton.sizePolicy().hasHeightForWidth())
        self.PRICELISTbutton.setSizePolicy(sizePolicy)
        self.PRICELISTbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PRICELISTbutton.setStyleSheet("background-color: rgb(255, 228, 225);\n"
"font: 12pt \"Times New Roman\";")
        self.PRICELISTbutton.setObjectName("PRICELISTbutton")
        self.gridLayout_11.addWidget(self.PRICELISTbutton, 0, 1, 1, 1)
        self.SalesRecordbutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SalesRecordbutton.sizePolicy().hasHeightForWidth())
        self.SalesRecordbutton.setSizePolicy(sizePolicy)
        self.SalesRecordbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SalesRecordbutton.setStyleSheet("background-color: rgb(255, 228, 225);\n"
"font: 12pt \"Times New Roman\";")
        self.SalesRecordbutton.setObjectName("SalesRecordbutton")
        self.gridLayout_11.addWidget(self.SalesRecordbutton, 0, 3, 1, 1)
        self.StockManagementbutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.StockManagementbutton.sizePolicy().hasHeightForWidth())
        self.StockManagementbutton.setSizePolicy(sizePolicy)
        self.StockManagementbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.StockManagementbutton.setStyleSheet("background-color: rgb(255, 228, 225);\n"
"font: 12pt \"Times New Roman\";")
        self.StockManagementbutton.setObjectName("StockManagementbutton")
        self.gridLayout_11.addWidget(self.StockManagementbutton, 0, 2, 1, 1)
        self.gridLayout_3.addWidget(self.frame_3, 3, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_3.addItem(spacerItem, 2, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.frame_2.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(1)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setHorizontalSpacing(6)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.Transactitle = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Transactitle.sizePolicy().hasHeightForWidth())
        self.Transactitle.setSizePolicy(sizePolicy)
        self.Transactitle.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.Transactitle.setAlignment(QtCore.Qt.AlignCenter)
        self.Transactitle.setObjectName("Transactitle")
        self.gridLayout_4.addWidget(self.Transactitle, 0, 1, 1, 1)
        self.Logo = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Logo.sizePolicy().hasHeightForWidth())
        self.Logo.setSizePolicy(sizePolicy)
        self.Logo.setMaximumSize(QtCore.QSize(80, 50))
        self.Logo.setText("")
        self.Logo.setPixmap(QtGui.QPixmap("Logo.png"))
        self.Logo.setScaledContents(True)
        self.Logo.setObjectName("Logo")
        self.gridLayout_4.addWidget(self.Logo, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(80, 50, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem1, 0, 2, 1, 1)
        self.gridLayout_4.setRowStretch(0, 1)
        self.gridLayout_5.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.Quantitylabel = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Quantitylabel.sizePolicy().hasHeightForWidth())
        self.Quantitylabel.setSizePolicy(sizePolicy)
        self.Quantitylabel.setStyleSheet("font: 12pt \"Tahoma\";")
        self.Quantitylabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Quantitylabel.setObjectName("Quantitylabel")
        self.gridLayout_6.addWidget(self.Quantitylabel, 1, 2, 1, 1)
        self.Ordercombox_4 = QtWidgets.QComboBox(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Ordercombox_4.sizePolicy().hasHeightForWidth())
        self.Ordercombox_4.setSizePolicy(sizePolicy)
        self.Ordercombox_4.setMaximumSize(QtCore.QSize(16777215, 40))
        self.Ordercombox_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Ordercombox_4.setMouseTracking(False)
        self.Ordercombox_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";background-color: rgb(255, 255, 255);")
        self.Ordercombox_4.setEditable(True)
        self.Ordercombox_4.setPlaceholderText("")
        self.Ordercombox_4.setFrame(True)
        self.Ordercombox_4.setObjectName("Ordercombox_4")
        self.gridLayout_6.addWidget(self.Ordercombox_4, 1, 1, 1, 1)
        self.Chooseitemlabel = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Chooseitemlabel.sizePolicy().hasHeightForWidth())
        self.Chooseitemlabel.setSizePolicy(sizePolicy)
        self.Chooseitemlabel.setStyleSheet("font: 12pt \"Tahoma\";")
        self.Chooseitemlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.Chooseitemlabel.setObjectName("Chooseitemlabel")
        self.gridLayout_6.addWidget(self.Chooseitemlabel, 1, 0, 1, 1)
        self.Orderamount_4 = QtWidgets.QDoubleSpinBox(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Orderamount_4.sizePolicy().hasHeightForWidth())
        self.Orderamount_4.setSizePolicy(sizePolicy)
        self.Orderamount_4.setMaximumSize(QtCore.QSize(16777215, 40))
        self.Orderamount_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Orderamount_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Orderamount_4.setDecimals(3)
        self.Orderamount_4.setMaximum(100000.0)
        self.Orderamount_4.setObjectName("Orderamount_4")
        self.gridLayout_6.addWidget(self.Orderamount_4, 1, 3, 1, 1)
        self.Placeorderbutton_4 = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Placeorderbutton_4.sizePolicy().hasHeightForWidth())
        self.Placeorderbutton_4.setSizePolicy(sizePolicy)
        self.Placeorderbutton_4.setMaximumSize(QtCore.QSize(16777215, 60))
        self.Placeorderbutton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Placeorderbutton_4.setStyleSheet("background-color: rgb(85, 170, 0);\n"
"font: 12pt \"Times New Roman\";")
        self.Placeorderbutton_4.setObjectName("Placeorderbutton_4")
        self.gridLayout_6.addWidget(self.Placeorderbutton_4, 1, 4, 1, 1)
        self.line_13 = QtWidgets.QFrame(self.frame_2)
        self.line_13.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_13.setObjectName("line_13")
        self.gridLayout_6.addWidget(self.line_13, 0, 0, 1, 5)
        self.gridLayout_6.setColumnStretch(0, 1)
        self.gridLayout_6.setColumnStretch(1, 2)
        self.gridLayout_6.setColumnStretch(2, 1)
        self.gridLayout_6.setColumnStretch(3, 2)
        self.gridLayout_6.setColumnStretch(4, 2)
        self.gridLayout_5.addLayout(self.gridLayout_6, 1, 0, 1, 1)
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.line_15 = QtWidgets.QFrame(self.frame_2)
        self.line_15.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_15.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_15.setObjectName("line_15")
        self.gridLayout_8.addWidget(self.line_15, 0, 0, 1, 4)
        self.ChangeLabel_4 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ChangeLabel_4.sizePolicy().hasHeightForWidth())
        self.ChangeLabel_4.setSizePolicy(sizePolicy)
        self.ChangeLabel_4.setMaximumSize(QtCore.QSize(16777215, 60))
        self.ChangeLabel_4.setStyleSheet("font: 12pt \"MS Reference Sans Serif\";\n"
"background-color: rgb(217, 217, 217);")
        self.ChangeLabel_4.setFrameShape(QtWidgets.QFrame.Box)
        self.ChangeLabel_4.setAlignment(QtCore.Qt.AlignCenter)
        self.ChangeLabel_4.setObjectName("ChangeLabel_4")
        self.gridLayout_8.addWidget(self.ChangeLabel_4, 3, 3, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_20.sizePolicy().hasHeightForWidth())
        self.label_20.setSizePolicy(sizePolicy)
        self.label_20.setStyleSheet("font: 12pt \"Tahoma\";")
        self.label_20.setAlignment(QtCore.Qt.AlignCenter)
        self.label_20.setObjectName("label_20")
        self.gridLayout_8.addWidget(self.label_20, 1, 2, 1, 1)
        self.line_16 = QtWidgets.QFrame(self.frame_2)
        self.line_16.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_16.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_16.setObjectName("line_16")
        self.gridLayout_8.addWidget(self.line_16, 1, 1, 4, 1)
        self.Paymentamount_4 = QtWidgets.QDoubleSpinBox(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Paymentamount_4.sizePolicy().hasHeightForWidth())
        self.Paymentamount_4.setSizePolicy(sizePolicy)
        self.Paymentamount_4.setMaximumSize(QtCore.QSize(16777215, 60))
        self.Paymentamount_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Paymentamount_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Paymentamount_4.setDecimals(2)
        self.Paymentamount_4.setMaximum(100000.0)
        self.Paymentamount_4.setObjectName("Paymentamount_4")
        self.gridLayout_8.addWidget(self.Paymentamount_4, 2, 3, 1, 1)
        self.BillLabel_4 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BillLabel_4.sizePolicy().hasHeightForWidth())
        self.BillLabel_4.setSizePolicy(sizePolicy)
        self.BillLabel_4.setMaximumSize(QtCore.QSize(16777215, 60))
        self.BillLabel_4.setStyleSheet("font: 12pt \"MS Reference Sans Serif\";\n"
"background-color: rgb(217, 217, 217);")
        self.BillLabel_4.setFrameShape(QtWidgets.QFrame.Box)
        self.BillLabel_4.setAlignment(QtCore.Qt.AlignCenter)
        self.BillLabel_4.setObjectName("BillLabel_4")
        self.gridLayout_8.addWidget(self.BillLabel_4, 1, 3, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_19.sizePolicy().hasHeightForWidth())
        self.label_19.setSizePolicy(sizePolicy)
        self.label_19.setStyleSheet("font: 12pt \"Tahoma\";")
        self.label_19.setAlignment(QtCore.Qt.AlignCenter)
        self.label_19.setObjectName("label_19")
        self.gridLayout_8.addWidget(self.label_19, 2, 2, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_21.sizePolicy().hasHeightForWidth())
        self.label_21.setSizePolicy(sizePolicy)
        self.label_21.setStyleSheet("font: 12pt \"Tahoma\";")
        self.label_21.setAlignment(QtCore.Qt.AlignCenter)
        self.label_21.setObjectName("label_21")
        self.gridLayout_8.addWidget(self.label_21, 3, 2, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.frame_2)
        self.tableWidget.setMinimumSize(QtCore.QSize(0, 120))
        self.tableWidget.setStyleSheet("background-color: rgb(217, 217, 217);"
                                       "alternate-background-color: rgb(250, 250, 250);")
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setFrameShape(QtWidgets.QFrame.Box)
        self.tableWidget.setFrameShadow(QtWidgets.QFrame.Raised)
        self.tableWidget.setLineWidth(2)
        self.tableWidget.setMidLineWidth(1)
        self.tableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.tableWidget.horizontalHeader().setVisible(True)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(120)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.horizontalHeader().setMinimumSectionSize(10)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        self.tableWidget.setMinimumWidth(380)
        self.tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.gridLayout_8.addWidget(self.tableWidget, 1, 0, 3, 1)
        self.gridLayout_8.setColumnStretch(0, 9)
        self.gridLayout_8.setColumnStretch(2, 4)
        self.gridLayout_8.setColumnStretch(3, 4)
        self.gridLayout_5.addLayout(self.gridLayout_8, 2, 0, 1, 1)
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.Undobutton = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Undobutton.sizePolicy().hasHeightForWidth())
        self.Undobutton.setSizePolicy(sizePolicy)
        self.Undobutton.setMaximumSize(QtCore.QSize(16777215, 60))
        self.Undobutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Undobutton.setStyleSheet("background-color: rgb(255, 186, 181);\n"
"font: 12pt \"Times New Roman\";")
        self.Undobutton.setObjectName("Undobutton")
        self.gridLayout_10.addWidget(self.Undobutton, 1, 0, 1, 1)
        self.ComputeChangebutton_4 = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ComputeChangebutton_4.sizePolicy().hasHeightForWidth())
        self.ComputeChangebutton_4.setSizePolicy(sizePolicy)
        self.ComputeChangebutton_4.setMaximumSize(QtCore.QSize(16777215, 60))
        self.ComputeChangebutton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ComputeChangebutton_4.setStyleSheet("background-color: rgb(0, 159, 159);\n"
"font: 12pt \"Times New Roman\";")
        self.ComputeChangebutton_4.setObjectName("ComputeChangebutton_4")
        self.gridLayout_10.addWidget(self.ComputeChangebutton_4, 1, 3, 1, 1)
        self.CancelOrdersbutton_4 = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CancelOrdersbutton_4.sizePolicy().hasHeightForWidth())
        self.CancelOrdersbutton_4.setSizePolicy(sizePolicy)
        self.CancelOrdersbutton_4.setMaximumSize(QtCore.QSize(16777215, 60))
        self.CancelOrdersbutton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CancelOrdersbutton_4.setStyleSheet("background-color: rgb(255, 186, 181);\n"
"font: 12pt \"Times New Roman\";")
        self.CancelOrdersbutton_4.setObjectName("CancelOrdersbutton_4")
        self.gridLayout_10.addWidget(self.CancelOrdersbutton_4, 1, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(5, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem2, 1, 2, 1, 1)
        self.line_14 = QtWidgets.QFrame(self.frame_2)
        self.line_14.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_14.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_14.setObjectName("line_14")
        self.gridLayout_10.addWidget(self.line_14, 0, 0, 1, 3)
        self.gridLayout_10.setColumnStretch(0, 1)
        self.gridLayout_10.setColumnStretch(1, 1)
        self.gridLayout_10.setColumnStretch(2, 1)
        self.gridLayout_10.setColumnStretch(3, 2)
        self.gridLayout_5.addLayout(self.gridLayout_10, 3, 0, 1, 1)
        self.gridLayout_5.setRowStretch(0, 1)
        self.gridLayout_5.setRowStretch(1, 3)
        self.gridLayout_5.setRowStretch(2, 10)
        self.gridLayout_5.setRowStretch(3, 3)
        self.gridLayout_3.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout_3.setRowStretch(0, 15)
        self.gridLayout_3.setRowStretch(3, 2)
        self.gridLayout.addWidget(self.frame, 1, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem3, 0, 1, 1, 1)
        self.Adminbutton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Adminbutton.sizePolicy().hasHeightForWidth())
        self.Adminbutton.setSizePolicy(sizePolicy)
        self.Adminbutton.setMinimumSize(QtCore.QSize(15, 15))
        self.Adminbutton.setMaximumSize(QtCore.QSize(50, 20))
        self.Adminbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Adminbutton.setStyleSheet("background-color: rgb(0, 165, 165);\n"
"font: 8pt \"Times New Roman\";")
        self.Adminbutton.setObjectName("Adminbutton")
        self.gridLayout_7.addWidget(self.Adminbutton, 0, 0, 1, 1)
        self.mwrefreshbutton = QtWidgets.QPushButton(self.frame_2)
        self.mwrefreshbutton.setMaximumSize(QtCore.QSize(80, 50))
        self.mwrefreshbutton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("refreshlogo.png"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        self.mwrefreshbutton.setIcon(icon)
        self.mwrefreshbutton.setIconSize(QtCore.QSize(55, 70))
        self.mwrefreshbutton.setFlat(True)
        self.mwrefreshbutton.setObjectName("mwrefreshbutton")
        self.mwrefreshbutton.clicked.connect(self.mwloaddata)
        self.gridLayout_4.addWidget(self.mwrefreshbutton, 0, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_7, 0, 0, 1, 1)
        MW_Transaction.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MW_Transaction)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 806, 21))
        self.menubar.setObjectName("menubar")
        MW_Transaction.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MW_Transaction)
        self.statusbar.setObjectName("statusbar")
        MW_Transaction.setStatusBar(self.statusbar)

        self.retranslateUi(MW_Transaction)
        QtCore.QMetaObject.connectSlotsByName(MW_Transaction)
# =============================================== CONNECT ============================================
        self.PRICELISTbutton.clicked.connect(self.openpl)
        self.StockManagementbutton.clicked.connect(self.opensm)
        self.SalesRecordbutton.clicked.connect(self.opensr)
        self.Adminbutton.clicked.connect(self.openad)
        self.Placeorderbutton_4.clicked.connect(self.Placeorder)
        self.ComputeChangebutton_4.clicked.connect(self.Compute)
        self.CancelOrdersbutton_4.clicked.connect(self.clearmbox)
        self.Undobutton.clicked.connect(self.undombox)
        self.getcboxitem()

    def retranslateUi(self, MW_Transaction):
        self.MW_Transaction = MW_Transaction
        _translate = QtCore.QCoreApplication.translate
        self.MW_Transaction.setWindowIcon(QtGui.QIcon("Logo.png"))
        self.MW_Transaction.setWindowTitle(_translate("MW_Transaction", "MARGIES VEGGIES"))
        self.PRICELISTbutton.setText(_translate("MW_Transaction", "ITEMS PRICE LIST"))
        self.PRICELISTbutton.setShortcut(_translate("MW_Transaction", "F2"))
        self.SalesRecordbutton.setText(_translate("MW_Transaction", "SALES RECORD"))
        self.SalesRecordbutton.setShortcut(_translate("MW_Transaction", "F4"))
        self.StockManagementbutton.setText(_translate("MW_Transaction", "STOCK MANAGEMENT"))
        self.StockManagementbutton.setShortcut(_translate("MW_Transaction", "F3"))
        self.mwrefreshbutton.setShortcut(_translate("MW_Transaction", "F5"))
        self.Transactitle.setText(_translate("MW_Transaction", "TRANSACTION"))
        self.Quantitylabel.setText(_translate("MW_Transaction", "Quantity:"))
        self.Chooseitemlabel.setText(_translate("MW_Transaction", "Choose an Item:"))
        self.Orderamount_4.setSuffix(_translate("MW_Transaction", " kg/pc"))
        self.Placeorderbutton_4.setText(_translate("MW_Transaction", "PLACE ORDER"))
        self.Placeorderbutton_4.setShortcut(_translate("MW_Transaction", "Ctrl+Space"))
        self.ChangeLabel_4.setText(_translate("MW_Transaction", "0"))
        self.label_20.setText(_translate("MW_Transaction", "BILL:"))
        self.Paymentamount_4.setPrefix(_translate("MW_Transaction", "Php "))
        self.BillLabel_4.setText(_translate("MW_Transaction", "0"))
        self.label_19.setText(_translate("MW_Transaction", "PAYMENT:"))
        self.label_21.setText(_translate("MW_Transaction", "CHANGE:"))
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MW_Transaction", "Items Ordered"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MW_Transaction", "Quantity"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MW_Transaction", "Price"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MW_Transaction", "Total"))
        header = self.tableWidget.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Stretch)

        self.Undobutton.setText(_translate("MW_Transaction", "UNDO ORDER"))
        self.ComputeChangebutton_4.setText(_translate("MW_Transaction", "COMPUTE / SETTLE TRANSACTION"))
        self.ComputeChangebutton_4.setShortcut(_translate("MW_Transaction", "Ctrl+Return"))
        self.CancelOrdersbutton_4.setText(_translate("MW_Transaction", "CLEAR ALL"))
        self.Undobutton.setShortcut(_translate("MW_Transaction", "Ctrl+z"))
        self.CancelOrdersbutton_4.setShortcut(_translate("MW_Transaction", "Ctrl+x"))
        self.Adminbutton.setText(_translate("MW_Transaction", "ADMIN"))
        self.Adminbutton.setShortcut(_translate("MW_Transaction", "F1"))

        # ======================================== SAMPLE DATA =====================================================================
    def sampledata(self):

        self.torder = self.cprice * self.Orderamount_4.value()
        self.sample = [
        {"Items Ordered": self.Ordercombox_4.currentText(), "Quantity": self.Orderamount_4.value()
                , "Price": self.cprice, "Total": self.torder}]
        self.tableWidget.setRowCount(self.row + 1)
        for Item in self.sample:
                self.tableWidget.setItem(self.row, 0, QtWidgets.QTableWidgetItem(Item["Items Ordered"]))
                self.tableWidget.setItem(self.row, 1, QtWidgets.QTableWidgetItem(str(Item["Quantity"])))
                self.tableWidget.setItem(self.row, 2, QtWidgets.QTableWidgetItem(str(Item["Price"])))
                self.tableWidget.setItem(self.row, 3, QtWidgets.QTableWidgetItem(str(Item["Total"])))
                self.row = self.row + 1
                self.corder = [self.Ordercombox_4.currentText(), self.Orderamount_4.value()]
                self.tlorder.append(self.corder)
        #============================================================================================
    def undombox(self):
            if self.tableWidget.rowCount() > 0:
                    msg = QMessageBox()
                    msg.setWindowTitle("Undo Last Order")
                    msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                    msg.setText("Are you sure you want to\nUndo Last Order Placed?")
                    msg.setIcon(QMessageBox.Question)
                    msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                    msg.buttonClicked.connect(self.undo)
                    x = msg.exec_()
                    self.computeindicator = 0
            else:
                    msg = QMessageBox()
                    msg.setWindowTitle("Error")
                    msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                    msg.setText("There's Nothing to Undo!")
                    msg.setIcon(QMessageBox.Warning)
                    x = msg.exec_()

    def undo(self, i):
        if i.text() == '&Yes':
                if self.tableWidget.rowCount() > 0:
                        self.undoprice = (str(self.tableWidget.item(self.row - 1, 3).text()))
                        self.bill -= float(self.undoprice)
                        self.billdisplay()
                        self.tlorder.pop(-1)
                        self.tableWidget.removeRow(self.tableWidget.rowCount() - 1)
                        self.row -=1
                        self.orderedquantity.pop(-1)
                        self.ordereditem.pop(-1)
                else:
                        msg = QMessageBox()
                        msg.setWindowTitle("Error")
                        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                        msg.setText("There's Nothing to Undo!")
                        msg.setIcon(QMessageBox.Warning)
                        x = msg.exec_()

    def mwloaddata(self):
        self.getcboxitem()

    def connect(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def getprice(self):
        try:
            self.connect()
            gpquery=("SELECT item_price FROM items WHERE itemname = %s")
            gpvalue=(self.Ordercombox_4.currentText(),)
            self.cur.execute(gpquery,gpvalue)
            self.itemp = self.cur.fetchone()
            self.itemprice=(self.itemp[0])
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def getcboxitem(self):
        self.itemlist1.clear()
        self.Ordercombox_4.clear()
        self.itemlist1 = ['Item List']
        try:
            self.connect()
            self.cur.execute("SELECT COUNT(itemname) FROM items")
            self.count=self.cur.fetchall()
            self.cur.execute("SELECT itemname FROM items")
            self.fetchitems = self.cur.fetchall()
            self.fcount=0
            if self.count[0][0] > 0:
                while self.fetchitems[self.fcount][0] != self.fetchitems[-1][0]:
                    self.itemlist1.append(self.fetchitems[self.fcount][0])
                    self.fcount+=1
                self.itemlist1.append(self.fetchitems[-1][0])
        except mdb.Error as err:
            self.errordisp(err.errno, err.sqlstate, err.msg)
        for x in self.itemlist1:
            self.Ordercombox_4.addItem(x)

    def Placeorder(self):
        if self.Orderamount_4.value() != 0.00 and self.Ordercombox_4.currentText() != 'Item List':
            if self.Ordercombox_4.currentText() in self.itemlist1:
                self.getprice()
                self.cprice=self.itemprice
                self.cbill = self.cprice * self.Orderamount_4.value()
                self.bill += self.cbill
                self.billdisplay()
                self.sampledata()
                self.orderedquantity.append(self.Orderamount_4.value())
                self.ordereditem.append(self.Ordercombox_4.currentText())
                self.Orderamount_4.setValue(0.00)
                self.Ordercombox_4.setCurrentText('Item List')
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Item ordered is not in the Item List")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

        else:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setText("Please Fill Up both Order and Quantity")
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()

    def Compute(self):
        if self.bill != 0:
                if self.Paymentamount_4.value() != 0.00:
                        if self.Paymentamount_4.value() < self.bill:
                                msg = QMessageBox()
                                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                                msg.setWindowTitle("Error")
                                msg.setText("Insufficient Payment!")
                                msg.setIcon(QMessageBox.Critical)
                                x = msg.exec_()
                        else:
                                self.change = self.Paymentamount_4.value() - self.bill
                                self.tchange = str(self.change)
                                self.ChangeLabel_4.setText('Php ' + self.tchange)
                                self.computeindicator = 1
                                self.settlembox()
                else:
                        msg = QMessageBox()
                        msg.setWindowTitle("Error")
                        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                        msg.setText("Please Input Payment!")
                        msg.setIcon(QMessageBox.Warning)
                        x = msg.exec_()
        else:
                msg = QMessageBox()
                msg.setWindowTitle("Warning")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("There's no bill value!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

    def billdisplay(self):
        self.tbill = str(self.bill)
        self.BillLabel_4.setText('Php ' + self.tbill)

    def settlembox(self):
        if self.computeindicator == 1:
                msg = QMessageBox()
                msg.setWindowTitle("Transaction Confirmation")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Are you sure you want to settle transaction?")
                msg.setInformativeText("Bill: "+self.BillLabel_4.text()+"\n"+"Payment: "+"Php "+str(self.Paymentamount_4.value())+"\n"+"Change: "+self.ChangeLabel_4.text())
                msg.setIcon(QMessageBox.Question)
                msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                msg.buttonClicked.connect(self.settle)
                x = msg.exec_()
                self.computeindicator = 0
        else:
                msg = QMessageBox()
                msg.setWindowTitle("Warning")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Complete Transaction Process First!")
                msg.setInformativeText("PlaceOrder > Input Payment > Compute Change")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

    def settle(self, i):
        self.connect()
        if i.text() == '&Yes':
            try:
                listahan=[]
                self.counter=0
                while self.counter == 0:
                    minusquery = ("SELECT itemquantity FROM items WHERE itemname = %s")
                    minusval = (self.ordereditem[0],)
                    self.cur.execute(minusquery, minusval)
                    self.currentmval = self.cur.fetchone()
                    self.cmval = (self.currentmval[0])
                    self.newvalue = self.cmval - (float(self.orderedquantity[0]))
                    query = "UPDATE items SET itemquantity = %s WHERE itemname = %s "
                    values = (self.newvalue,self.ordereditem[0])
                    self.cur.execute(query, values)
                    soldquery=("SELECT iditems,item_price FROM items WHERE itemname = %s")
                    soldvalue=(self.ordereditem[0],)
                    self.cur.execute(soldquery,soldvalue)
                    self.getfkey = self.cur.fetchone()
                    self.fkey=self.getfkey[0]
                    self.singlebill= self.getfkey[1]
                    self.quantity=(float(self.orderedquantity[0]))
                    self.sbill = float(self.singlebill) * self.quantity
                    now = date.today()
                    bdquery = "INSERT INTO record (orderbill,transactiondate,itemsid,orderquantity) VALUES (%s,%s,%s,%s)"
                    bdvalue = (self.sbill, now, self.fkey,self.quantity)
                    self.cur.execute(bdquery, bdvalue)
                    self.db.commit()
                    self.orderedquantity.pop(0)
                    self.ordereditem.pop(0)
                    if len(self.orderedquantity) == 0:
                        self.counter=1


            except mdb.Error as err:
                QMessageBox.critical(self,"ERROR!", err.msg)
            self.clearall2()

    def clearmbox(self):
        msg = QMessageBox()
        msg.setWindowTitle("Clear All")
        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
        msg.setText("Are you sure you want\nto clear all orders/inputs?")
        msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
        msg.buttonClicked.connect(self.clearall)
        x = msg.exec_()

    def clearall(self, i):
        if i.text() == '&Yes':
                self.bill = 0
                self.tbill = 0
                self.billdisplay()
                self.tlorder.clear()
                self.Orderamount_4.setValue(0.00)
                self.Paymentamount_4.setValue(0.00)
                self.tableWidget.clearContents()
                self.row = 0
                self.tableWidget.setRowCount(0)
                self.orderedquantity.clear()
                self.ordereditem.clear()

    def clearall2(self):
                self.bill = 0
                self.tbill = 0
                self.billdisplay()
                self.tlorder.clear()
                self.Orderamount_4.setValue(0.00)
                self.ChangeLabel_4.setText('Php ' + '0')
                self.Paymentamount_4.setValue(0.00)
                self.tableWidget.clearContents()
                self.row = 0
                self.tableWidget.setRowCount(0)
                self.orderedquantity.clear()
                self.ordereditem.clear()

    def exitmainwindow(self):
        MW_Transaction.hide()
        SalesRecord.hide()
        Pricelist.hide()
        Admin.hide()
        StockManagement.hide()

    def exitmbox(self):
        msg = QMessageBox()
        msg.setWindowTitle("EXIT")
        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
        msg.setText("Are you sure you\nwant to close ALL windows?")
        msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
        msg.buttonClicked.connect(self.exit)
        x = msg.exec_()

    def exit(self,i):
        if i.text()=='&Yes':
            self.exitmainwindow()

    def closeEvent(self, event):
        close = QMessageBox()
        close.setWindowTitle("Exit Window")
        close.setWindowIcon(QtGui.QIcon("Logo.png"))
        close.setIcon(QMessageBox.Question)
        close.setText("Are you sure you\nwant to Close ALL windows?")
        close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
        close = close.exec_()

        if close == QMessageBox.Yes:
            event.accept()
            self.exitmainwindow()
        else:
            event.ignore()

class Ui_Admin(QtWidgets.QMainWindow):

    def LOGOUT(self,i):
        if i.text() == '&Yes':
            self.closeall()
            MainWindow.show()

    def LOGOUTmbox(self):
            msg = QMessageBox()
            msg.setWindowTitle("LOG OUT ACCOUNT")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setText("Are you sure you\nwant to log out?")
            msg.setIcon(QMessageBox.Question)
            msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
            msg.buttonClicked.connect(self.LOGOUT)
            x = msg.exec_()
    def userpass(self):
        self.Username = self.username
        self.Password = self.password
    def closeall(self):
        MW_Transaction.hide()
        SalesRecord.hide()
        Pricelist.hide()
        Admin.hide()
        StockManagement.hide()

    def setupad(self, Admin):
        Admin.setWindowModality(QtCore.Qt.ApplicationModal)
        self.connect()
        self.getuser()
        self.getpass()
        Admin.setObjectName("Admin")
        Admin.resize(643, 433)
        Admin.setStyleSheet("background-color: rgb(180, 236, 243);\n"
"")
        self.centralwidget = QtWidgets.QWidget(Admin)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("background-color: rgb(153, 153, 153);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.frame_4 = QtWidgets.QFrame(self.frame_2)
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.label_4 = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_9.addWidget(self.label_4, 2, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_9.addWidget(self.label_5, 3, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_9.addWidget(self.label_6, 4, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.frame_4)
        self.pushButton.setMinimumSize(QtCore.QSize(20, 20))
        self.pushButton.setMaximumSize(QtCore.QSize(70, 100))
        self.pushButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Echologo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(50, 50))
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_9.addWidget(self.pushButton, 3, 2, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_2.setMinimumSize(QtCore.QSize(20, 20))
        self.pushButton_2.setMaximumSize(QtCore.QSize(70, 100))
        self.pushButton_2.setText("")
        self.pushButton_2.setIcon(icon)
        self.pushButton_2.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_2.setFlat(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_9.addWidget(self.pushButton_2, 4, 2, 1, 1)
        self.line = QtWidgets.QFrame(self.frame_4)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_9.addWidget(self.line, 1, 0, 1, 3)
        self.label_7 = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout_9.addWidget(self.label_7, 0, 0, 1, 3)
        self.ADMINuser = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ADMINuser.sizePolicy().hasHeightForWidth())
        self.ADMINuser.setSizePolicy(sizePolicy)
        self.ADMINuser.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.ADMINuser.setFont(font)
        self.ADMINuser.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.ADMINuser.setFrameShape(QtWidgets.QFrame.Box)
        self.ADMINuser.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ADMINuser.setText(self.username)
        self.ADMINuser.setObjectName("ADMINuser")
        self.ADMINuser.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
        self.gridLayout_9.addWidget(self.ADMINuser, 2, 1, 1, 1)
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.ChangePassbutton = QtWidgets.QPushButton(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ChangePassbutton.sizePolicy().hasHeightForWidth())
        self.ChangePassbutton.setSizePolicy(sizePolicy)
        self.ChangePassbutton.setMinimumSize(QtCore.QSize(0, 30))
        self.ChangePassbutton.setMaximumSize(QtCore.QSize(1000, 100))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.ChangePassbutton.setFont(font)
        self.ChangePassbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ChangePassbutton.setStyleSheet("background-color: rgb(255, 186, 181);")
        self.ChangePassbutton.setObjectName("ChangePassbutton")
        self.gridLayout_11.addWidget(self.ChangePassbutton, 0, 1, 1, 1)
        self.gridLayout_9.addLayout(self.gridLayout_11, 5, 0, 1, 3)
        self.Newpassentry = QtWidgets.QLineEdit(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Newpassentry.sizePolicy().hasHeightForWidth())
        self.Newpassentry.setSizePolicy(sizePolicy)
        self.Newpassentry.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Newpassentry.setFont(font)
        self.Newpassentry.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.Newpassentry.setEchoMode(QtWidgets.QLineEdit.Password)
        self.Newpassentry.setClearButtonEnabled(True)
        self.Newpassentry.setObjectName("Newpassentry")
        self.gridLayout_9.addWidget(self.Newpassentry, 4, 1, 1, 1)
        self.Currentpassentry = QtWidgets.QLineEdit(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Currentpassentry.sizePolicy().hasHeightForWidth())
        self.Currentpassentry.setSizePolicy(sizePolicy)
        self.Currentpassentry.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Currentpassentry.setFont(font)
        self.Currentpassentry.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.Currentpassentry.setEchoMode(QtWidgets.QLineEdit.Password)
        self.Currentpassentry.setClearButtonEnabled(True)
        self.Currentpassentry.setObjectName("Currentpassentry")
        self.gridLayout_9.addWidget(self.Currentpassentry, 3, 1, 1, 1)
        self.gridLayout_8.addWidget(self.frame_4, 0, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_8, 2, 0, 1, 1)
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.frame_5 = QtWidgets.QFrame(self.frame_2)
        self.frame_5.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setLineWidth(10)
        self.frame_5.setMidLineWidth(10)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.LogOutbutton = QtWidgets.QPushButton(self.frame_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LogOutbutton.sizePolicy().hasHeightForWidth())
        self.LogOutbutton.setSizePolicy(sizePolicy)
        self.LogOutbutton.setMaximumSize(QtCore.QSize(700, 500))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(15)
        self.LogOutbutton.setFont(font)
        self.LogOutbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LogOutbutton.setStyleSheet("background-color: rgb(64, 167, 211);\n"
"")
        self.LogOutbutton.setObjectName("LogOutbutton")
        self.LogOutbutton.clicked.connect(self.LOGOUTmbox)
        self.gridLayout_12.addWidget(self.LogOutbutton, 0, 0, 1, 1)
        self.gridLayout_10.addWidget(self.frame_5, 0, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_10, 2, 1, 1, 1)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_8 = QtWidgets.QLabel(self.frame_2)
        self.label_8.setMaximumSize(QtCore.QSize(80, 50))
        self.label_8.setText("")
        self.label_8.setPixmap(QtGui.QPixmap("Logo.png"))
        self.label_8.setScaledContents(True)
        self.label_8.setObjectName("label_8")
        self.gridLayout_4.addWidget(self.label_8, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_4.addWidget(self.label, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(80, 50, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem, 0, 2, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_4, 0, 0, 1, 2)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.ADMINusername = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ADMINusername.sizePolicy().hasHeightForWidth())
        self.ADMINusername.setSizePolicy(sizePolicy)
        self.ADMINusername.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ADMINusername.setFont(font)
        self.ADMINusername.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.ADMINusername.setFrameShape(QtWidgets.QFrame.Box)
        self.ADMINusername.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ADMINusername.setText(self.username)
        self.ADMINusername.setObjectName("ADMINusername")
        self.ADMINusername.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
        self.gridLayout_7.addWidget(self.ADMINusername, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame_3)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_7.addWidget(self.label_2, 0, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_7.addWidget(self.label_3, 0, 2, 1, 1)
        self.ADMINpassword = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ADMINpassword.sizePolicy().hasHeightForWidth())
        self.ADMINpassword.setSizePolicy(sizePolicy)
        self.ADMINpassword.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ADMINpassword.setFont(font)
        self.ADMINpassword.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.ADMINpassword.setFrameShape(QtWidgets.QFrame.Box)
        self.ADMINpassword.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ADMINpassword.setObjectName("ADMINpassword")
        self.ADMINpassword.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
        self.echopassword()
        self.gridLayout_7.addWidget(self.ADMINpassword, 0, 3, 1, 1)
        self.gridLayout_5.addWidget(self.frame_3, 0, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_5, 1, 0, 1, 2)
        self.gridLayout_6.setRowStretch(0, 1)
        self.gridLayout_6.setRowStretch(1, 1)
        self.gridLayout_6.setRowStretch(2, 4)
        self.gridLayout_3.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem1, 1, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_13, 0, 0, 1, 1)
        Admin.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Admin)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 643, 21))
        self.menubar.setObjectName("menubar")
        Admin.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Admin)
        self.statusbar.setObjectName("statusbar")
        Admin.setStatusBar(self.statusbar)
        self.retranslateUi(Admin)
        QtCore.QMetaObject.connectSlotsByName(Admin)
        self.refreshad = QtWidgets.QPushButton(self.frame_2)
        self.refreshad.setMaximumSize(QtCore.QSize(80, 50))
        self.refreshad.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("refreshlogo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.refreshad.setIcon(icon1)
        self.refreshad.setIconSize(QtCore.QSize(80, 50))
        self.refreshad.setFlat(True)
        self.refreshad.setObjectName("adrefreshbutton")
        self.gridLayout_4.addWidget(self.refreshad, 0, 2, 1, 1)
        self.refreshad.clicked.connect(self.adloaddata)
        self.refreshad.setShortcut(QtCore.QCoreApplication.translate("Admin", "F5"))
        self.ChangePassbutton.clicked.connect(self.CHANGEPASS)
        self.pushButton.clicked.connect(self.echo)
        self.pushButton_2.clicked.connect(self.echo2)
        self.echocounter =0
        self.echocounter2 =0

    def connect(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def adloaddata(self):
        self.Currentpassentry.clear()
        self.Newpassentry.clear()

    def getpass(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
            self.cur.execute("SELECT password FROM admin")
            self.getpassword = self.cur.fetchone()
            self.password=(self.getpassword[0])
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def getuser(self):
        try:
            self.cur.execute("SELECT username FROM admin")
            self.getusername = self.cur.fetchone()
            self.username=(self.getusername[0])
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def echo(self):
        if self.echocounter == 1:
                self.Currentpassentry.setEchoMode(QtWidgets.QLineEdit.Password)
                self.echocounter -= 1
        else:
                self.Currentpassentry.setEchoMode(QtWidgets.QLineEdit.Normal)
                self.echocounter += 1

    def echo2(self):
        if self.echocounter2 == 1:
                self.Newpassentry.setEchoMode(QtWidgets.QLineEdit.Password)
                self.echocounter2 -= 1
        else:
                self.Newpassentry.setEchoMode(QtWidgets.QLineEdit.Normal)
                self.echocounter2 += 1

    def retranslateUi(self, Admin):
        self.Admin=Admin
        _translate = QtCore.QCoreApplication.translate
        self.Admin.setWindowIcon(QtGui.QIcon("Logo.png"))
        self.Admin.setWindowTitle(_translate("Admin", "MARGIES VEGGIES"))
        self.label_4.setText(_translate("Admin", "ADMIN USERNAME: "))
        self.label_5.setText(_translate("Admin", "CURRENT PASSWORD: "))
        self.label_6.setText(_translate("Admin", "NEW PASSWORD: "))
        self.label_7.setText(_translate("Admin", "CHANGE PASSWORD"))
        self.ChangePassbutton.setText(_translate("Admin", "CHANGE PASSWORD"))
        self.ChangePassbutton.setShortcut(_translate("Admin", "Return"))
        self.LogOutbutton.setText(_translate("Admin", "LOGOUT"))
        self.label.setText(_translate("Admin", "ADMINISTRATOR"))
        self.label_2.setText(_translate("Admin", "USERNAME: "))
        self.label_3.setText(_translate("Admin", "PASSWORD: "))

    def echopassword(self):
        self.getuser()
        self.getpass()
        self.userpass()
        self.Passlist = list(self.password)
        for x in (self.Passlist):
                if x in self.Passlist[1:-1]:
                        self.Passlist[self.Passlist.index(x)] = '*'
                self.passdisplay = "".join(self.Passlist)
                self.ADMINpassword.setText(self.passdisplay)

    def CHANGEPASS(self):
        self.getuser()
        self.getpass()
        self.userpass()
        if self.Currentpassentry.text() == self.password:
                if len(self.Newpassentry.text()) >= 5 and len(self.Newpassentry.text()) <= 12:
                        if self.Newpassentry.text() != '':
                                msg = QMessageBox()
                                msg.setWindowTitle("Change Pass")
                                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                                msg.setText("Are you sure you want to change your Password?")
                                msg.setIcon(QMessageBox.Question)
                                msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                                msg.buttonClicked.connect(self.CHANGEPASSprint)
                                x = msg.exec_()
                        else:
                                msg = QMessageBox()
                                msg.setWindowTitle("Error")
                                msg.setText("Please Input New Password!")
                                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                                msg.setIcon(QMessageBox.Critical)
                                x = msg.exec_()
                else:
                        msg = QMessageBox()
                        msg.setWindowTitle("Password Failed!")
                        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                        msg.setText("Password length must between 5-12 characters!")
                        msg.setIcon(QMessageBox.Critical)
                        x = msg.exec_()
        else:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Current Password is WRONG!")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

    def CHANGEPASSprint(self, i):
        if i.text() == '&Yes':
            try:
                self.connect()
                query = "UPDATE admin SET password = %s WHERE username = %s "
                values = (self.Newpassentry.text(),self.username)
                self.cur.execute(query, values)
                self.db.commit()
                self.Currentpassentry.clear()
                self.Newpassentry.clear()
            except mdb.Error as err:
                QMessageBox.critical(self,"ERROR!", err.msg)
            self.echopassword()

    def closeEvent(self, event):
        close = QMessageBox()
        close.setWindowTitle("Exit Window")
        close.setWindowIcon(QtGui.QIcon("Logo.png"))
        close.setIcon(QMessageBox.Question)
        close.setText("Are you sure you\nwant to Exit this Window?")
        close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
        close = close.exec_()
        if close == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()

class Ui_StockManagement(QtWidgets.QMainWindow):

    def setupsm(self, StockManagement):
        StockManagement.setWindowModality(QtCore.Qt.ApplicationModal)
        StockManagement.setObjectName("StockManagement")
        StockManagement.resize(881, 661)
        StockManagement.setStyleSheet("background-color: rgb(180, 236, 243);\n""")
        self.centralwidget = QtWidgets.QWidget(StockManagement)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("background-color: rgb(153, 153, 153);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_4.addWidget(self.label, 0, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.frame_2)
        self.label_9.setMinimumSize(QtCore.QSize(40, 40))
        self.label_9.setMaximumSize(QtCore.QSize(70, 120))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap("Logo.png"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.gridLayout_4.addWidget(self.label_9, 0, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.frame_2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 1, 0, 1, 2)
        self.gridLayout_9.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.STOCKtablewidget = QtWidgets.QTableWidget(self.frame_2)
        self.STOCKtablewidget.setMinimumSize(QtCore.QSize(300, 150))
        self.STOCKtablewidget.setFrameShape(QtWidgets.QFrame.Box)
        self.STOCKtablewidget.setFrameShadow(QtWidgets.QFrame.Raised)
        self.STOCKtablewidget.setLineWidth(2)
        self.STOCKtablewidget.setMidLineWidth(1)
        self.STOCKtablewidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.STOCKtablewidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.STOCKtablewidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.STOCKtablewidget.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.STOCKtablewidget.setAlternatingRowColors(True)
        self.STOCKtablewidget.setObjectName("STOCKtablewidget")
        self.STOCKtablewidget.setColumnCount(3)
        self.STOCKtablewidget.setRowCount(0)
        self.STOCKtablewidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        header = self.STOCKtablewidget.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        item.setFont(font)
        self.STOCKtablewidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.STOCKtablewidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.STOCKtablewidget.setHorizontalHeaderItem(2, item)
        self.STOCKtablewidget.horizontalHeader().setDefaultSectionSize(261)
        self.STOCKtablewidget.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_5.addWidget(self.STOCKtablewidget, 0, 0, 1, 1)
        self.gridLayout_9.addLayout(self.gridLayout_5, 1, 0, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.line_2 = QtWidgets.QFrame(self.frame_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_6.addWidget(self.line_2, 0, 0, 1, 2)
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_6.addWidget(self.label_2, 1, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_6.addWidget(self.label_3, 1, 1, 1, 1)
        self.gridLayout_9.addLayout(self.gridLayout_6, 2, 0, 1, 1)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_4 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_8.addWidget(self.label_4, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_8.addWidget(self.label_5, 2, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_8.addWidget(self.label_6, 3, 0, 1, 1)
        self.Restockitem = QtWidgets.QComboBox(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Restockitem.sizePolicy().hasHeightForWidth())
        self.Restockitem.setSizePolicy(sizePolicy)
        self.Restockitem.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Restockitem.setFont(font)
        self.Restockitem.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Restockitem.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.Restockitem.setEditable(True)
        self.Restockitem.setObjectName("Restockitem")
        self.gridLayout_8.addWidget(self.Restockitem, 0, 1, 1, 1)
        self.Addnewitementry = QtWidgets.QLineEdit(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Addnewitementry.sizePolicy().hasHeightForWidth())
        self.Addnewitementry.setSizePolicy(sizePolicy)
        self.Addnewitementry.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Addnewitementry.setFont(font)
        self.Addnewitementry.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.Addnewitementry.setObjectName("Addnewitementry")
        self.gridLayout_8.addWidget(self.Addnewitementry, 3, 1, 1, 1)
        self.Amountadd = QtWidgets.QDoubleSpinBox(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Amountadd.sizePolicy().hasHeightForWidth())
        self.Amountadd.setSizePolicy(sizePolicy)
        self.Amountadd.setMinimumSize(QtCore.QSize(100, 0))
        self.Amountadd.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Amountadd.setFont(font)
        self.Amountadd.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Amountadd.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.Amountadd.setObjectName("Amountadd")
        self.Amountadd.setDecimals(3)
        self.Amountadd.setMaximum(100000.0)
        self.gridLayout_8.addWidget(self.Amountadd, 2, 1, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.frame_3)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_8.addWidget(self.line_3, 0, 3, 4, 1)
        self.Addnewitembutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Addnewitembutton.sizePolicy().hasHeightForWidth())
        self.Addnewitembutton.setSizePolicy(sizePolicy)
        self.Addnewitembutton.setMinimumSize(QtCore.QSize(0, 40))
        self.Addnewitembutton.setMaximumSize(QtCore.QSize(16777215, 100))
        self.Addnewitembutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Addnewitembutton.setStyleSheet("background-color: rgb(225, 201, 209);")
        self.Addnewitembutton.setObjectName("Addnewitembutton")
        self.gridLayout_8.addWidget(self.Addnewitembutton, 3, 2, 1, 1)
        self.Addamountbutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Addamountbutton.sizePolicy().hasHeightForWidth())
        self.Addamountbutton.setSizePolicy(sizePolicy)
        self.Addamountbutton.setMaximumSize(QtCore.QSize(16777215, 100))
        self.Addamountbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Addamountbutton.setStyleSheet("background-color: rgb(255, 186, 181);")
        self.Addamountbutton.setObjectName("Addamountbutton")
        self.gridLayout_8.addWidget(self.Addamountbutton, 0, 2, 3, 1)
        self.smrefreshbutton = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.smrefreshbutton.sizePolicy().hasHeightForWidth())
        self.smrefreshbutton.setSizePolicy(sizePolicy)
        self.smrefreshbutton.setMaximumSize(QtCore.QSize(55, 120))
        self.smrefreshbutton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("refreshlogo.png"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        self.smrefreshbutton.setIcon(icon)
        self.smrefreshbutton.setIconSize(QtCore.QSize(55, 70))
        self.smrefreshbutton.setFlat(True)
        self.smrefreshbutton.setObjectName("smrefreshbutton")
        self.gridLayout_4.addWidget(self.smrefreshbutton, 0, 2, 1, 1)
        self.smrefreshbutton.clicked.connect(self.smloaddata)
        self.label_8 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_8.addWidget(self.label_8, 3, 4, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout_8.addWidget(self.label_7, 0, 4, 3, 1)
        self.Amountremove = QtWidgets.QDoubleSpinBox(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Amountremove.sizePolicy().hasHeightForWidth())
        self.Amountremove.setSizePolicy(sizePolicy)
        self.Amountremove.setMinimumSize(QtCore.QSize(100, 0))
        self.Amountremove.setMaximumSize(QtCore.QSize(16777215, 80))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Amountremove.setFont(font)
        self.Amountremove.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Amountremove.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.Amountremove.setObjectName("Amountremove")
        self.Amountremove.setDecimals(3)
        self.Amountremove.setMaximum(100000.0)
        self.gridLayout_8.addWidget(self.Amountremove, 3, 5, 1, 1)
        self.Remitembutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Remitembutton.sizePolicy().hasHeightForWidth())
        self.Remitembutton.setSizePolicy(sizePolicy)
        self.Remitembutton.setMinimumSize(QtCore.QSize(0, 40))
        self.Remitembutton.setMaximumSize(QtCore.QSize(16777215, 80))
        self.Remitembutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Remitembutton.setStyleSheet("background-color: rgb(225, 201, 209);")
        self.Remitembutton.setObjectName("Remitembutton")
        self.gridLayout_8.addWidget(self.Remitembutton, 3, 6, 1, 1)
        self.Remamountbutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Remamountbutton.sizePolicy().hasHeightForWidth())
        self.Remamountbutton.setSizePolicy(sizePolicy)
        self.Remamountbutton.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Remamountbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Remamountbutton.setStyleSheet("background-color: rgb(255, 186, 181);")
        self.Remamountbutton.setObjectName("Remamountbutton")
        self.gridLayout_8.addWidget(self.Remamountbutton, 0, 6, 3, 1)
        self.Removeitem = QtWidgets.QComboBox(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Removeitem.sizePolicy().hasHeightForWidth())
        self.Removeitem.setSizePolicy(sizePolicy)
        self.Removeitem.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.Removeitem.setFont(font)
        self.Removeitem.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Removeitem.setStyleSheet("background-color: rgb(255, 255, 255);\n""")
        self.Removeitem.setEditable(True)
        self.Removeitem.setObjectName("Ordercombox")
        self.gridLayout_8.addWidget(self.Removeitem, 0, 5, 3, 1)
        self.gridLayout_7.addWidget(self.frame_3, 0, 0, 1, 1)
        self.gridLayout_9.addLayout(self.gridLayout_7, 3, 0, 1, 1)
        self.gridLayout_9.setRowStretch(0, 1)
        self.gridLayout_9.setRowStretch(1, 10)
        self.gridLayout_9.setRowStretch(2, 1)
        self.gridLayout_9.setRowStretch(3, 4)
        self.gridLayout_3.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_10, 0, 0, 1, 1)
        StockManagement.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(StockManagement)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 881, 21))
        self.menubar.setObjectName("menubar")
        StockManagement.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(StockManagement)
        self.statusbar.setObjectName("statusbar")
        StockManagement.setStatusBar(self.statusbar)
        self.retranslateUi(StockManagement)
        QtCore.QMetaObject.connectSlotsByName(StockManagement)
        self.Addamountbutton.clicked.connect(self.ADDamount)
        self.Remitembutton.clicked.connect(self.REMitem)
        self.Remamountbutton.clicked.connect(self.REMamount)
        self.Addnewitembutton.clicked.connect(self.ADDitem)
        self.getcboxitem()
        self.smtable()

    def connect(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def insertnewitem(self):
        try:
            self.connect()
            query= "INSERT INTO items (itemname,itemquantity,item_selling_unit,item_price) VALUES (%s,%s,%s,%s)"
            value= (self.Addnewitementry.text(),0.00,self.itemValue,0.00)
            self.cur.execute(query,value)
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self, "ERROR!", err.msg)

    def smloaddata(self):
        self.smtable()
        self.getcboxitem()
        self.smclear()

    def getcboxitem(self):
        self.itemlist1=['Item List']
        self.Restockitem.clear()
        self.Removeitem.clear()
        try:
            self.connect()
            self.cur.execute("SELECT COUNT(itemname) FROM items")
            self.smitemcount= self.cur.fetchall()
            self.cur.execute("SELECT itemname FROM items")
            self.fetchitems = self.cur.fetchall()
            self.fcount = 0
            if self.smitemcount[0][0] >= 1:
                while self.fetchitems[self.fcount][0] != self.fetchitems[-1][0]:
                    if self.fetchitems[self.fcount][0] not in self.itemlist1:
                        self.itemlist1.append(self.fetchitems[self.fcount][0])
                        self.fcount += 1
                if self.fetchitems[-1][0] not in self.itemlist1:
                    self.itemlist1.append(self.fetchitems[-1][0])
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)
        for x in self.itemlist1:
            self.Restockitem.addItem(x)
        for x in self.itemlist1:
            self.Removeitem.addItem(x)

    def restocksearchunit(self):
        try:
            self.connect()
            rsquery = ("SELECT item_selling_unit FROM items WHERE itemname = %s")
            rsval = (self.Restockitem.currentText(),)
            self.cur.execute(rsquery, rsval)
            self.restockval = self.cur.fetchone()
            self.rsunit = (self.restockval[0])
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def removesearchunit(self):
        try:
            self.connect()
            rmquery = ("SELECT item_selling_unit FROM items WHERE itemname = %s")
            rmval = (self.Removeitem.currentText(),)
            self.cur.execute(rmquery, rmval)
            self.removeval = self.cur.fetchone()
            self.rmunit = (self.removeval[0])
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def smtable(self):
        try:
            self.connect()
            self.cur.execute("SELECT COUNT(itemname) FROM items")
            self.smcount=self.cur.fetchone()
            self.smrowcount=(self.smcount[0])
            self.cur.execute("SELECT itemname, itemquantity, item_selling_unit FROM items ORDER BY itemquantity ASC")
            self.display=self.cur.fetchall()
            self.STOCKtablewidget.setRowCount(self.smrowcount)
            if self.smrowcount >= 1:
                self.smrow = 0
                for row in self.display:
                    self.STOCKtablewidget.setItem(self.smrow,0,QtWidgets.QTableWidgetItem(row[0]))
                    self.STOCKtablewidget.setItem(self.smrow, 1, QtWidgets.QTableWidgetItem(str(row[1])))
                    self.STOCKtablewidget.setItem(self.smrow, 2, QtWidgets.QTableWidgetItem(row[2]))
                    self.smrow += 1
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def additemquantity(self):
        try:
            self.connect()
            addquery=("SELECT itemquantity FROM items WHERE itemname = %s")
            addval=(self.Restockitem.currentText(),)
            self.cur.execute(addquery,addval)
            self.currentval=self.cur.fetchone()
            self.cval=(self.currentval[0])
            self.newvalue=self.cval+self.Amountadd.value()
            query = "UPDATE items SET itemquantity = %s WHERE itemname = %s "
            values = (self.newvalue, self.Restockitem.currentText())
            self.cur.execute(query, values)
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def remitemquantity(self):
        try:
            self.connect()
            remquery=("SELECT itemquantity FROM items WHERE itemname = %s")
            remval=(self.Removeitem.currentText(),)
            self.cur.execute(remquery,remval)
            self.remcurrentval=self.cur.fetchone()
            self.remcval=(self.remcurrentval[0])
            self.remnewvalue=self.remcval-self.Amountremove.value()
            query = "UPDATE items SET itemquantity = %s WHERE itemname = %s "
            values = (self.remnewvalue, self.Removeitem.currentText())
            self.cur.execute(query, values)
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def removeitem(self):
        try:
            self.connect()
            query= "DELETE FROM items WHERE itemname = %s"
            value= (self.Removeitem.currentText(),)
            self.cur.execute(query,value)
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self, "ERROR!", err.msg)


    def REMitem(self):
        if self.Removeitem.currentText() != 'Item List':
            if self.Removeitem.currentText() in self.itemlist1:
                msg = QMessageBox()
                msg.setWindowTitle("Remove Item")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Are you sure you want to Remove " + str(self.Removeitem.currentText()) + " as an item?")
                msg.setInformativeText("All records of " + str(self.Removeitem.currentText()) + " will be deleted!")
                msg.setIcon(QMessageBox.Question)
                msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                msg.buttonClicked.connect(self.REMitemprint)
                x = msg.exec_()
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Remove Item")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Item inputted is not in the Item list!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

        else:
            msg = QMessageBox()
            msg.setWindowTitle("Remove Item")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setText("Please choose an item to remove!")
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()


    def REMitemprint(self,i):
        if i.text() == '&Yes':
            self.removeitem()
            self.smtable()
            self.getcboxitem()
            self.Removeitem.setCurrentText('Item List')

    def REMamount(self):
        if self.Amountremove.value() != 0.00 and self.Removeitem.currentText() != 'Item List':
            if self.Removeitem.currentText() in self.itemlist1:
                self.removesearchunit()
                msg = QMessageBox()
                msg.setWindowTitle("Remove Amount")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Are you sure you want to Remove \n" + (str(self.Amountremove.value())) +" "+self.rmunit+" of " + self.Removeitem.currentText() + "?")
                msg.setIcon(QMessageBox.Question)
                msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                msg.buttonClicked.connect(self.REMamountprint)
                x = msg.exec_()
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Remove Item")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Item inputted is not in the Item list!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
        else:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Please input item and quantity to Remove!")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()

    def REMamountprint(self,i):
        if i.text() == '&Yes':
            self.remitemquantity()
            self.smtable()
            self.Removeitem.setCurrentText('Item List')
            self.Amountremove.setValue(0.00)

    def ADDitem(self):
        itementry1=self.Addnewitementry.text()
        itementry=itementry1.strip()
        if itementry:
            if itementry.lower() not in (str.lower() for str in self.itemlist1):
                self.kgpc()
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Item inputted already in the list!")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
        else:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Please input an item to ADD!")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()

    def kgpc(self):
        self.items=['kg','pc']
        self.itemValue, self.answer = QInputDialog.getItem\
            (self,'Way to Sell',"Sell "+self.Addnewitementry.text()+" per:",self.items,0,False)
        if self.answer == True:
            self.Confirmation()

    def Confirmation(self):
        msg = QMessageBox()
        msg.setWindowTitle("Add Item")
        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
        msg.setText("Are you sure you want to ADD " + str(self.Addnewitementry.text()) + " as an item?")
        msg.setInformativeText(str(self.Addnewitementry.text()) + " will be sold per " + self.itemValue)
        msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
        msg.buttonClicked.connect(self.ADDitemprint)
        x = msg.exec_()

    def ADDitemprint(self,i):
        if i.text() == '&Yes':
            self.insertnewitem()
            self.getcboxitem()
            self.smtable()
            self.Addnewitementry.clear()

    def ADDamount(self):
        if self.Amountadd.value() != 0.00 and self.Restockitem.currentText() != 'Item List':
            if self.Restockitem.currentText() in self.itemlist1:
                self.restocksearchunit()
                msg = QMessageBox()
                msg.setWindowTitle("Add Amount")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Are you sure you want to ADD \n"+ (str(self.Amountadd.value()))+" "+self.rsunit+" of "+self.Restockitem.currentText()+"?")
                msg.setIcon(QMessageBox.Question)
                msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                msg.buttonClicked.connect(self.ADDamountprint)
                x = msg.exec_()
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Remove Item")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Item inputted is not in the Item list!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
        else:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Please input item and quantity to add!")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()

    def ADDamountprint(self,i):
        if i.text() == '&Yes':
            self.additemquantity()
            self.smtable()
            self.Restockitem.setCurrentText('Item List')
            self.Amountadd.setValue(0.00)

    def retranslateUi(self, StockManagement):
        self.StockManagement = StockManagement
        _translate = QtCore.QCoreApplication.translate
        self.StockManagement.setWindowIcon(QtGui.QIcon("Logo.png"))
        self.StockManagement.setWindowTitle(_translate("StockManagement", "MARGIES VEGGIES"))
        self.label.setText(_translate("StockManagement", "STOCK MANAGEMENT"))
        item = self.STOCKtablewidget.horizontalHeaderItem(0)
        item.setText(_translate("StockManagement", "ITEM\S"))
        item = self.STOCKtablewidget.horizontalHeaderItem(1)
        item.setText(_translate("StockManagement", "QUANTITY"))
        item = self.STOCKtablewidget.horizontalHeaderItem(2)
        item.setText(_translate("StockManagement", "UNIT SOLD"))
        self.label_2.setText(_translate("StockManagement", "ADD / RESTOCK ITEM"))
        self.label_3.setText(_translate("StockManagement", "REMOVE / DESTOCK ITEM"))
        self.label_4.setText(_translate("StockManagement", "INPUT ITEM: "))
        self.label_5.setText(_translate("StockManagement", "QUANTITY: "))
        self.label_6.setText(_translate("StockManagement", "ADD NEW ITEM:"))
        self.Amountadd.setSuffix(_translate("StockManagement", " kg/pc"))
        self.Addnewitembutton.setText(_translate("StockManagement", "ADD NEW ITEM"))
        self.Addamountbutton.setText(_translate("StockManagement", "ADD QUANTITY"))
        self.label_8.setText(_translate("StockManagement", "QUANTITY:"))
        self.label_7.setText(_translate("StockManagement", "INPUT ITEM:"))
        self.Amountremove.setSuffix(_translate("StockManagement", " kg/pc"))
        self.Remitembutton.setText(_translate("StockManagement", "REMOVE ITEM"))
        self.Remamountbutton.setText(_translate("StockManagement", "REMOVE QUANTITY"))
        self.smrefreshbutton.setShortcut(_translate("StockManagement","F5"))

    def smclear(self):
        self.Removeitem.setCurrentText('Item List')
        self.Restockitem.setCurrentText('Item List')
        self.Addnewitementry.clear()
        self.Amountadd.setValue(0.00)
        self.Amountremove.setValue(0.00)

    def closeEvent(self, event):
        close = QMessageBox()
        close.setWindowTitle("Exit Window")
        close.setWindowIcon(QtGui.QIcon("Logo.png"))
        close.setIcon(QMessageBox.Question)
        close.setText("Are you sure you\nwant to Exit this Window?")
        close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
        close = close.exec_()

        if close == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()

class Ui_SalesRecord(QtWidgets.QMainWindow):

    def setupsr(self, SalesRecord):
        SalesRecord.setWindowModality(QtCore.Qt.ApplicationModal)
        self.datelist=['']
        SalesRecord.setObjectName("SalesRecord")
        SalesRecord.resize(908, 672)
        SalesRecord.setStyleSheet("background-color: rgb(180, 236, 243);")
        self.centralwidget = QtWidgets.QWidget(SalesRecord)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("background-color: rgb(153, 153, 153);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.frame_3 = QtWidgets.QFrame(self.frame_2)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.TotalSR = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TotalSR.sizePolicy().hasHeightForWidth())
        self.TotalSR.setSizePolicy(sizePolicy)
        self.TotalSR.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.TotalSR.setFrameShape(QtWidgets.QFrame.Box)
        self.TotalSR.setFrameShadow(QtWidgets.QFrame.Plain)
        self.TotalSR.setAlignment(QtCore.Qt.AlignCenter)
        self.TotalSR.setObjectName("TotalSR")
        self.gridLayout_9.addWidget(self.TotalSR, 2, 4, 1, 1)
        self.SRbutton = QtWidgets.QPushButton(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SRbutton.sizePolicy().hasHeightForWidth())
        self.SRbutton.setSizePolicy(sizePolicy)
        self.SRbutton.setMinimumSize(QtCore.QSize(100, 50))
        self.SRbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SRbutton.setStyleSheet("background-color: rgb(255, 186, 181);")
        self.SRbutton.setObjectName("SRbutton")
        self.gridLayout_9.addWidget(self.SRbutton, 2, 0, 1, 3)
        self.SRdate = QtWidgets.QDateEdit(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SRdate.sizePolicy().hasHeightForWidth())
        self.SRdate.setSizePolicy(sizePolicy)
        self.SRdate.setStyleSheet("color: rgb(0, 0, 0);\n"
                                  "background-color: rgb(255, 255, 255);\n"
                                  "")
        self.SRdate.setCalendarPopup(True)
        self.SRdate.setTimeSpec(QtCore.Qt.TimeZone)
        self.SRdate.setDate(QtCore.QDate(date.today()))
        self.SRdate.setObjectName("SRdate")
        self.gridLayout_9.addWidget(self.SRdate, 1, 2, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Tahoma")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout_9.addWidget(self.label_3, 1, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.frame_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Tahoma")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_9.addWidget(self.label_4, 1, 4, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.frame_3)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_9.addWidget(self.line_3, 1, 3, 2, 1)
        self.gridLayout_9.setColumnStretch(0, 5)
        self.gridLayout_9.setColumnStretch(2, 5)
        self.gridLayout_9.setColumnStretch(4, 10)
        self.gridLayout_7.addWidget(self.frame_3, 0, 1, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_7, 3, 0, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_6.addWidget(self.label_2, 1, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.frame_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_6.addWidget(self.line_2, 0, 0, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_6, 2, 0, 1, 1)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_4.addWidget(self.label, 0, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setMaximumSize(QtCore.QSize(80, 50))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("Logo.png"))
        self.label_5.setScaledContents(True)
        self.label_5.setObjectName("label_5")
        self.gridLayout_4.addWidget(self.label_5, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(80, 50, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem, 0, 2, 1, 1)
        self.line = QtWidgets.QFrame(self.frame_2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 1, 0, 1, 3)
        self.gridLayout_8.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.SRtablewidget = QtWidgets.QTableWidget(self.frame_2)
        self.SRtablewidget.setMinimumSize(QtCore.QSize(700, 300))
        self.SRtablewidget.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.SRtablewidget.setAlternatingRowColors(True)
        self.SRtablewidget.setFrameShape(QtWidgets.QFrame.Box)
        self.SRtablewidget.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SRtablewidget.setLineWidth(3)
        self.SRtablewidget.setMidLineWidth(1)
        self.SRtablewidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.SRtablewidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.SRtablewidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.SRtablewidget.setObjectName("SRtablewidget")
        self.SRtablewidget.setColumnCount(4)
        self.SRtablewidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.SRtablewidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SRtablewidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.SRtablewidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.SRtablewidget.setHorizontalHeaderItem(3, item)
        self.SRtablewidget.horizontalHeader().setDefaultSectionSize(120)
        self.SRtablewidget.horizontalHeader().setStretchLastSection(True)
        header = self.SRtablewidget.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Stretch)
        self.gridLayout_5.addWidget(self.SRtablewidget, 0, 0, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_5, 1, 0, 1, 1)
        self.gridLayout_8.setRowStretch(0, 1)
        self.gridLayout_8.setRowStretch(1, 10)
        self.gridLayout_8.setRowStretch(2, 1)
        self.gridLayout_8.setRowStretch(3, 4)
        self.gridLayout_3.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.srrefreshbutton = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.srrefreshbutton.sizePolicy().hasHeightForWidth())
        self.srrefreshbutton.setSizePolicy(sizePolicy)
        self.srrefreshbutton.setMaximumSize(QtCore.QSize(80, 50))
        self.srrefreshbutton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("refreshlogo.png"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        self.srrefreshbutton.setIcon(icon)
        self.srrefreshbutton.setIconSize(QtCore.QSize(55, 70))
        self.srrefreshbutton.setFlat(True)
        self.srrefreshbutton.setObjectName("srrefreshbutton")
        self.gridLayout_4.addWidget(self.srrefreshbutton, 0, 2, 1, 1)
        self.srrefreshbutton.clicked.connect(self.srloaddata)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem1, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_10, 0, 0, 1, 1)
        SalesRecord.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(SalesRecord)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 908, 21))
        self.menubar.setObjectName("menubar")
        SalesRecord.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(SalesRecord)
        self.statusbar.setObjectName("statusbar")
        SalesRecord.setStatusBar(self.statusbar)
        self.retranslateUi(SalesRecord)
        QtCore.QMetaObject.connectSlotsByName(SalesRecord)
        self.SRbutton.clicked.connect(self.SRerror)
        self.srtable()

    def retranslateUi(self, SalesRecord):
        self.SalesRecord=SalesRecord
        _translate = QtCore.QCoreApplication.translate
        SalesRecord.setWindowTitle(_translate("SalesRecord", "MARGIES VEGGIES"))
        SalesRecord.setWindowIcon(QtGui.QIcon("Logo.png"))
        self.TotalSR.setText(_translate("SalesRecord", "0"))
        self.SRbutton.setText(_translate("SalesRecord", "COMPUTE SALES"))
        self.SRbutton.setShortcut(_translate("SalesRecord", "Return"))
        self.SRdate.setDisplayFormat(_translate("SalesRecord", "yyyy-M-dd"))
        self.label_3.setText(_translate("SalesRecord", "INPUT DATE:"))
        self.label_4.setText(_translate("SalesRecord", "TOTAL SALES ON INPUTTED DATE"))
        self.label_2.setText(_translate("SalesRecord", "CALCULATE SALES ON SPECIFIC DATE"))
        self.label.setText(_translate("SalesRecord", "SALES RECORD"))
        item = self.SRtablewidget.horizontalHeaderItem(0)
        item.setText(_translate("SalesRecord", "ITEMS SOLD"))
        item = self.SRtablewidget.horizontalHeaderItem(1)
        item.setText(_translate("SalesRecord", "QUANTITY SOLD"))
        item = self.SRtablewidget.horizontalHeaderItem(2)
        item.setText(_translate("SalesRecord", "ORDER SALE"))
        item = self.SRtablewidget.horizontalHeaderItem(3)
        item.setText(_translate("SalesRecord", "ORDER DATE"))
        self.srrefreshbutton.setShortcut(_translate("SalesRecord", "F5"))

    def connect(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def srloaddata(self):
        self.srtable()
        self.SRdate.setDate(QtCore.QDate(date.today()))
        self.TotalSR.setText('0')

    def srtable(self):
        try:
            self.itemssold=[]
            self.connect()
            self.cur.execute("SELECT itemsid FROM record ORDER BY transactiondate")
            self.itemid=self.cur.fetchall()
            self.idcount=0
            for x in self.itemid:
                getitem=("SELECT itemname FROM items WHERE iditems =%s")
                id=(x[0],)
                self.cur.execute(getitem,id)
                self.it=self.cur.fetchone()
                self.itemssold.append(self.it[0])
            self.cur.execute("SELECT COUNT(orderbill) FROM record")
            self.count=self.cur.fetchone()
            self.rowcount=int(self.count[0])
            self.cur.execute("SELECT orderbill, transactiondate,orderquantity FROM record ORDER BY transactiondate DESC")
            self.srdisplay=self.cur.fetchall()
            if self.count[0] >= 1:
                self.srrow = 0
                self.itcount=0
                self.SRtablewidget.setRowCount(self.rowcount)
                for row in self.srdisplay:
                    self.SRtablewidget.setItem(self.srrow,3,QtWidgets.QTableWidgetItem(' '+str(row[1])))
                    self.SRtablewidget.setItem(self.srrow,2, QtWidgets.QTableWidgetItem(' Php '+str(row[0])))
                    self.SRtablewidget.setItem(self.srrow, 1, QtWidgets.QTableWidgetItem(' ' + str(row[2])))
                    self.srrow += 1
                for x in self.itemssold:
                    self.SRtablewidget.setItem(self.itcount, 0, QtWidgets.QTableWidgetItem(x))
                    self.itcount+=1

        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.sqlstate+err.msg)

    def getbill(self):
        try:
            self.connect()
            datequery=("SELECT orderbill FROM record WHERE transactiondate = %s")
            datevalue=(str(self.SRdate.text()),)
            self.cur.execute(datequery,datevalue)
            self.listofbill= self.cur.fetchall()
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self, "ERROR!", err.msg)
    def SRerror(self):
        self.connect()
        try:
            self.connect()
            self.cur.execute("SELECT transactiondate FROM record")
            self.listofdates = self.cur.fetchall()
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)
        self.getbill()
        self.datebill=0
        for x in self.listofbill:
            self.datebill += (int(x[0]))
        if self.datebill == 0:
            self.TotalSR.setText('NO TRANSACTION SALES OCCURED ON INPUTTED DATE!')
        else:
            self.TotalSR.setText('TOTAL SALES ON ('+self.SRdate.text()+'): '+'Php '+str(self.datebill))

    def srexitmbox(self):
        msg = QMessageBox()
        msg.setWindowTitle("Exit Window")
        msg.setWindowIcon(QtGui.QIcon('Logo.png'))
        msg.setText("Are you sure you want\nto return to Transaction Window?")
        msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
        msg.buttonClicked.connect(self.srexit)
        x = msg.exec_()

    def closeEvent(self, event):
        close = QMessageBox()
        close.setWindowTitle("Exit Window")
        close.setWindowIcon(QtGui.QIcon("Logo.png"))
        close.setIcon(QMessageBox.Question)
        close.setText("Are you sure you\nwant to Exit this Window?")
        close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
        close = close.exec_()

        if close == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()

class Ui_Pricelist(QtWidgets.QMainWindow):

    def setuppl(self, Pricelist):
        Pricelist.setWindowModality(QtCore.Qt.ApplicationModal)
        self.itemlist1 = ['Item List']
        Pricelist.setObjectName("Pricelist")
        Pricelist.resize(641, 473)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Pricelist.sizePolicy().hasHeightForWidth())
        Pricelist.setSizePolicy(sizePolicy)
        Pricelist.setStyleSheet("background-color: rgb(180, 236, 243);")
        self.centralwidget = QtWidgets.QWidget(Pricelist)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet("background-color: rgb(153, 153, 153);")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(2)
        self.frame.setObjectName("frame")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setStyleSheet("background-color: rgb(224, 238, 238);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.line_3 = QtWidgets.QFrame(self.frame_2)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_3.addWidget(self.line_3, 2, 1, 1, 1)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.Pricelisttitle_2 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Pricelisttitle_2.sizePolicy().hasHeightForWidth())
        self.Pricelisttitle_2.setSizePolicy(sizePolicy)
        self.Pricelisttitle_2.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.Pricelisttitle_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Pricelisttitle_2.setAlignment(QtCore.Qt.AlignCenter)
        self.Pricelisttitle_2.setObjectName("Pricelisttitle_2")
        self.gridLayout_5.addWidget(self.Pricelisttitle_2, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem, 0, 2, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.frame_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_5.addWidget(self.line_2, 1, 0, 1, 3)
        self.label = QtWidgets.QLabel(self.frame_2)
        self.label.setMinimumSize(QtCore.QSize(80, 50))
        self.label.setMaximumSize(QtCore.QSize(70, 120))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("Logo.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.gridLayout_5.addWidget(self.label, 0, 0, 1, 1)
        self.gridLayout_5.setColumnStretch(0, 1)
        self.gridLayout_5.setColumnStretch(1, 10)
        self.gridLayout_5.setColumnStretch(2, 1)
        self.gridLayout_3.addLayout(self.gridLayout_5, 1, 0, 1, 3)
        self.gridLayout_18 = QtWidgets.QGridLayout()
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.line_12 = QtWidgets.QFrame(self.frame_2)
        self.line_12.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_12.setObjectName("line_12")
        self.gridLayout_18.addWidget(self.line_12, 0, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        self.label_9.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_9.setObjectName("label_9")
        self.gridLayout_18.addWidget(self.label_9, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.line_13 = QtWidgets.QFrame(self.frame_2)
        self.line_13.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_13.setObjectName("line_13")
        self.gridLayout_18.addWidget(self.line_13, 2, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_18, 3, 0, 1, 3)
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.frame_2)
        self.tableWidget_2.setMinimumSize(QtCore.QSize(240, 120))
        self.tableWidget_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.tableWidget_2.setStyleSheet("background-color: rgb(213, 213, 213);")
        self.tableWidget_2.setAlternatingRowColors(True)
        self.tableWidget_2.setFrameShape(QtWidgets.QFrame.Box)
        self.tableWidget_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.tableWidget_2.setLineWidth(3)
        self.tableWidget_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tableWidget_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(3)
        self.tableWidget_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        self.tableWidget_2.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.tableWidget_2.horizontalHeader().setDefaultSectionSize(75)
        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        header = self.tableWidget_2.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)
        self.gridLayout_11.addWidget(self.tableWidget_2, 0, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_11, 2, 0, 1, 1)
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.line_7 = QtWidgets.QFrame(self.frame_2)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_13.addWidget(self.line_7, 1, 0, 1, 1)
        self.Searchpricetitle_2 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Searchpricetitle_2.sizePolicy().hasHeightForWidth())
        self.Searchpricetitle_2.setSizePolicy(sizePolicy)
        self.Searchpricetitle_2.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.Searchpricetitle_2.setObjectName("Searchpricetitle_2")
        self.gridLayout_13.addWidget(self.Searchpricetitle_2, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.gridLayout_14 = QtWidgets.QGridLayout()
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.frame_4 = QtWidgets.QFrame(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy)
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.label_6 = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_15.addWidget(self.label_6, 0, 0, 1, 1)
        self.Searchcombox_2 = QtWidgets.QComboBox(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Searchcombox_2.sizePolicy().hasHeightForWidth())
        self.Searchcombox_2.setSizePolicy(sizePolicy)
        self.Searchcombox_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Searchcombox_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";background-color: rgb(255, 255, 255);")
        self.Searchcombox_2.setEditable(True)
        self.Searchcombox_2.setObjectName("Searchcombox_2")
        self.gridLayout_15.addWidget(self.Searchcombox_2, 0, 1, 1, 1)
        self.Computesalesbutton_2 = QtWidgets.QPushButton(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Computesalesbutton_2.sizePolicy().hasHeightForWidth())
        self.Computesalesbutton_2.setSizePolicy(sizePolicy)
        self.Computesalesbutton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Computesalesbutton_2.setStyleSheet("background-color: rgb(255, 228, 225);\n"
"background-color: rgb(83, 195, 255);\n"
"font: 12pt \"Times New Roman\";")
        self.Computesalesbutton_2.setFlat(False)
        self.Computesalesbutton_2.setObjectName("Computesalesbutton_2")
        self.gridLayout_15.addWidget(self.Computesalesbutton_2, 1, 0, 1, 2)
        self.Searchpricelabel_2 = QtWidgets.QLabel(self.frame_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Searchpricelabel_2.sizePolicy().hasHeightForWidth())
        self.Searchpricelabel_2.setSizePolicy(sizePolicy)
        self.Searchpricelabel_2.setStyleSheet("background-color: rgb(213, 213, 213);font: 75 12pt \"Times New Roman\";")
        self.Searchpricelabel_2.setFrameShape(QtWidgets.QFrame.Box)
        self.Searchpricelabel_2.setLineWidth(1)
        self.Searchpricelabel_2.setAlignment(QtCore.Qt.AlignCenter)
        self.Searchpricelabel_2.setObjectName("Searchpricelabel_2")
        self.gridLayout_15.addWidget(self.Searchpricelabel_2, 2, 0, 1, 2)
        self.gridLayout_15.setRowMinimumHeight(0, 1)
        self.gridLayout_15.setRowMinimumHeight(1, 1)
        self.gridLayout_15.setRowMinimumHeight(2, 20)
        self.gridLayout_15.setColumnStretch(0, 1)
        self.gridLayout_15.setColumnStretch(1, 1)
        self.gridLayout_15.setRowStretch(0, 2)
        self.gridLayout_15.setRowStretch(1, 2)
        self.gridLayout_15.setRowStretch(2, 5)
        self.gridLayout_14.addWidget(self.frame_4, 1, 1, 1, 1)
        self.gridLayout_14.setRowStretch(0, 1)
        self.gridLayout_14.setRowStretch(1, 10)
        self.gridLayout_13.addLayout(self.gridLayout_14, 2, 0, 1, 1)
        self.gridLayout_13.setRowStretch(0, 1)
        self.gridLayout_13.setRowStretch(1, 1)
        self.gridLayout_13.setRowStretch(2, 7)
        self.gridLayout_3.addLayout(self.gridLayout_13, 2, 2, 1, 1)
        self.gridLayout_22 = QtWidgets.QGridLayout()
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.label_16 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_16.sizePolicy().hasHeightForWidth())
        self.label_16.setSizePolicy(sizePolicy)
        self.label_16.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_16.setObjectName("label_16")
        self.gridLayout_22.addWidget(self.label_16, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.label_17 = QtWidgets.QLabel(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_17.sizePolicy().hasHeightForWidth())
        self.label_17.setSizePolicy(sizePolicy)
        self.label_17.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_17.setObjectName("label_17")
        self.gridLayout_22.addWidget(self.label_17, 0, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.Setnewpricebutton_4 = QtWidgets.QPushButton(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Setnewpricebutton_4.sizePolicy().hasHeightForWidth())
        self.Setnewpricebutton_4.setSizePolicy(sizePolicy)
        self.Setnewpricebutton_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Setnewpricebutton_4.setStyleSheet("background-color: rgb(255, 228, 225);\n"
"background-color: rgb(83, 195, 255);\n"
"font: 12pt \"Times New Roman\";")
        self.Setnewpricebutton_4.setObjectName("Setnewpricebutton_4")
        self.gridLayout_22.addWidget(self.Setnewpricebutton_4, 0, 2, 2, 1)
        self.Newpriceentry_4 = QtWidgets.QDoubleSpinBox(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Newpriceentry_4.sizePolicy().hasHeightForWidth())
        self.Newpriceentry_4.setSizePolicy(sizePolicy)
        self.Newpriceentry_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Newpriceentry_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 12pt \"MS Shell Dlg 2\";")
        self.Newpriceentry_4.setMaximum(100000.0)
        self.Newpriceentry_4.setObjectName("Newpriceentry_4")
        self.gridLayout_22.addWidget(self.Newpriceentry_4, 1, 1, 1, 1)
        self.Setpricecombox_4 = QtWidgets.QComboBox(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Setpricecombox_4.sizePolicy().hasHeightForWidth())
        self.Setpricecombox_4.setSizePolicy(sizePolicy)
        self.Setpricecombox_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 11pt \"MS Shell Dlg 2\";background-color: rgb(255, 255, 255);")
        self.Setpricecombox_4.setEditable(True)
        self.Setpricecombox_4.setObjectName("Setpricecombox_4")
        self.gridLayout_22.addWidget(self.Setpricecombox_4, 0, 1, 1, 1)
        self.gridLayout_22.setColumnStretch(0, 2)
        self.gridLayout_22.setColumnStretch(1, 4)
        self.gridLayout_22.setColumnStretch(2, 6)
        self.gridLayout_3.addLayout(self.gridLayout_22, 4, 0, 1, 3)
        self.gridLayout_3.setRowStretch(0, 1)
        self.gridLayout_3.setRowStretch(1, 1)
        self.gridLayout_3.setRowStretch(2, 20)
        self.gridLayout_3.setRowStretch(3, 1)
        self.gridLayout_3.setRowStretch(4, 5)
        self.gridLayout_6.addWidget(self.frame_2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.gridLayout_23 = QtWidgets.QGridLayout()
        self.gridLayout_23.setObjectName("gridLayout_23")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_23.addItem(spacerItem1, 0, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_23, 0, 0, 1, 1)
        self.refreshbutton = QtWidgets.QPushButton(self.frame_2)
        self.refreshbutton.setMaximumSize(QtCore.QSize(80, 50))
        self.refreshbutton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("refreshlogo.png"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        self.refreshbutton.setIcon(icon)
        self.refreshbutton.setIconSize(QtCore.QSize(55, 70))
        self.refreshbutton.setAutoDefault(False)
        self.refreshbutton.setDefault(False)
        self.refreshbutton.setFlat(True)
        self.refreshbutton.setObjectName("refreshbutton")
        self.refreshbutton.clicked.connect(self.plloaddata)
        self.gridLayout_5.addWidget(self.refreshbutton, 0, 2, 1, 1)
        Pricelist.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Pricelist)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 641, 21))
        self.menubar.setObjectName("menubar")
        Pricelist.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Pricelist)
        self.statusbar.setObjectName("statusbar")
        Pricelist.setStatusBar(self.statusbar)
        self.retranslateUi(Pricelist)
        QtCore.QMetaObject.connectSlotsByName(Pricelist)
        self.Computesalesbutton_2.clicked.connect(self.SEARCH)
        self.Setnewpricebutton_4.clicked.connect(self.SETprice)
        self.plloaddata()
    def retranslateUi(self, Pricelist):
        self.Pricelist=Pricelist
        _translate = QtCore.QCoreApplication.translate
        self.Pricelist.setWindowIcon(QtGui.QIcon("Logo.png"))
        self.Pricelist.setWindowTitle(_translate("Pricelist", "MARGIES VEGGIES"))
        self.Pricelisttitle_2.setText(_translate("Pricelist", "PRICE LIST"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ITEM"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "PRICE"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "UNIT"))
        self.label_9.setText(_translate("Pricelist", "CUSTOMIZE ITEM\'S PRICES"))
        self.Searchpricetitle_2.setText(_translate("Pricelist", "SEARCH PRICE"))
        self.label_6.setText(_translate("Pricelist", "INPUT ITEM:"))
        self.Computesalesbutton_2.setText(_translate("Pricelist", "SEARCH PRICE"))
        self.Computesalesbutton_2.setShortcut(_translate("Pricelist", "Return"))
        self.Searchpricelabel_2.setText(_translate("Pricelist", "0"))
        self.label_16.setText(_translate("Pricelist", "SET NEW PRICE:"))
        self.label_17.setText(_translate("Pricelist", "INPUT ITEM:"))
        self.Setnewpricebutton_4.setText(_translate("Pricelist", "SET PRICE"))
        self.Setnewpricebutton_4.setShortcut(_translate("Pricelist", "Space"))
        self.refreshbutton.setShortcut(_translate("Pricelist", "F5"))
        self.Newpriceentry_4.setPrefix(_translate("Pricelist", "Php "))
        self.Newpriceentry_4.setSuffix(_translate("Pricelist", " per kg/pc"))

    def connect(self):
        try:
            self.db = mdb.connect(host="localhost", user="root", password="lunafamily", database="mvsystem")
            self.cur = self.db.cursor()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def plloaddata(self):
        self.pltable()
        self.getcboxitem()
        self.Setpricecombox_4.setCurrentText('Item List')
        self.Searchcombox_2.setCurrentText('Item List')
        self.Searchpricelabel_2.setText('')
        self.Newpriceentry_4.setValue(0.00)


    def pltable(self):
        try:
            self.connect()
            self.cur.execute("SELECT COUNT(itemname) FROM items")
            self.plcount=self.cur.fetchone()
            self.plrowcount=(self.plcount[0])
            self.cur.execute("SELECT itemname, item_price,item_selling_unit FROM items ORDER BY item_price ASC")
            self.pldisplay = self.cur.fetchall()
            if int(self.plcount[0]) >=1:
                self.plrow = 0
                self.tableWidget_2.setRowCount(self.plrowcount)
                for row in self.pldisplay:
                    self.tableWidget_2.setItem(self.plrow, 0, QtWidgets.QTableWidgetItem(str(row[0])))
                    self.tableWidget_2.setItem(self.plrow, 1, QtWidgets.QTableWidgetItem('Php ' + str(row[1])))
                    self.tableWidget_2.setItem(self.plrow, 2, QtWidgets.QTableWidgetItem(str(row[2])))
                    self.plrow += 1
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def getcboxitem(self):
        self.itemlist1.clear()
        self.Searchcombox_2.clear()
        self.Setpricecombox_4.clear()
        self.itemlist1 = ['Item List']

        try:
            self.connect()
            self.cur.execute("SELECT COUNT(itemname) FROM items")
            self.plcount2=self.cur.fetchall()
            self.cur.execute("SELECT itemname FROM items")
            self.fetchitems = self.cur.fetchall()
            self.fcount=0
            if int(self.plcount2[0][0]) >= 1:
                while self.fetchitems[self.fcount][0] != self.fetchitems[-1][0]:
                    self.itemlist1.append(self.fetchitems[self.fcount][0])
                    self.fcount+=1
                self.itemlist1.append(self.fetchitems[-1][0])
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

        for x in self.itemlist1:
            self.Searchcombox_2.addItem(x)
        for x in self.itemlist1:
            self.Setpricecombox_4.addItem(x)
    def updateprice(self):
        try:
            self.connect()
            query = "UPDATE items SET item_price = %s WHERE itemname = %s "
            values = (self.Newpriceentry_4.value(), self.Setpricecombox_4.currentText())
            self.cur.execute(query, values)
            self.db.commit()
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def searchprice(self):
        try:
            self.connect()
            spquery=("SELECT item_price,item_selling_unit FROM items WHERE itemname = %s")
            spval=(self.Searchcombox_2.currentText(),)
            self.cur.execute(spquery,spval)
            self.spval=self.cur.fetchone()
            self.priceval=(self.spval[0])
            self.itemunit=(self.spval[1])
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def searchunit(self):
        try:
            self.connect()
            suquery = ("SELECT item_selling_unit FROM items WHERE itemname = %s")
            suval = (self.Setpricecombox_4.currentText(),)
            self.cur.execute(suquery, suval)
            self.sunitval = self.cur.fetchone()
            self.setunit = (self.sunitval[0])
        except mdb.Error as err:
            QMessageBox.critical(self,"ERROR!", err.msg)

    def SETprice(self):
        if self.Setpricecombox_4.currentText() == 'Item List' or self.Newpriceentry_4.value() == 0.0:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Please Input Item and Amount to Set Price!")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()
        else:
            if self.Setpricecombox_4.currentText() in self.itemlist1:
                self.searchunit()
                msg = QMessageBox()
                msg.setWindowTitle("Set Price")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Set price of "+self.Setpricecombox_4.currentText()+" as \nPhp "+str(self.Newpriceentry_4.value())+" per "+self.setunit)
                msg.setIcon(QMessageBox.Question)
                msg.setStandardButtons(QMessageBox.Cancel | QMessageBox.Yes)
                msg.buttonClicked.connect(self.SETpriceprint)
                x = msg.exec_()
            else:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Item inputted is not in the item list!")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()

    def SETpriceprint(self, i):
        if i.text() == '&Yes':
            self.updateprice()
            self.pltable()
            self.Newpriceentry_4.setValue(0.00)
            self.Setpricecombox_4.setCurrentText('Item List')

    def SEARCH(self):
        searchitem=self.Searchcombox_2.currentText()
        if searchitem != 'Item List':
            if searchitem.lower() not in (str.lower() for str in self.itemlist1):
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setWindowIcon(QtGui.QIcon('Logo.png'))
                msg.setText("Item Inputted is not on the list!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
            else:
                self.searchprice()
                self.Searchpricelabel_2.setText(self.Searchcombox_2.currentText()+" Price:\n Php " + str(self.priceval)+" per "+str(self.itemunit))
                self.Searchcombox_2.setCurrentText('Item List')
        else:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setWindowIcon(QtGui.QIcon('Logo.png'))
            msg.setText("Please input item to search!")
            msg.setIcon(QMessageBox.Critical)
            x = msg.exec_()

    def closeEvent(self, event):
        close = QMessageBox()
        close.setWindowTitle("Exit Window")
        close.setWindowIcon(QtGui.QIcon("Logo.png"))
        close.setIcon(QMessageBox.Question)
        close.setText("Are you sure you\nwant to Exit this Window?")
        close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
        close = close.exec_()

        if close == QMessageBox.Yes:
            event.accept()
        else:
            event.ignore()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)

    MainWindow = Ui_logwindow()
    ui = Ui_logwindow()
    ui.setuplogin(MainWindow)

    MW_Transaction = Ui_MW_Transaction()
    ui2 = Ui_MW_Transaction()
    ui2.setupmw(MW_Transaction)

    Admin = Ui_Admin()
    ui3 = Ui_Admin()
    ui3.setupad(Admin)

    Pricelist = Ui_Pricelist()
    ui4 = Ui_Pricelist()
    ui4.setuppl(Pricelist)

    StockManagement = Ui_StockManagement()
    ui5 = Ui_StockManagement()
    ui5.setupsm(StockManagement)

    SalesRecord = Ui_SalesRecord()
    ui6 = Ui_SalesRecord()
    ui6.setupsr(SalesRecord)

    MainWindow.show()
    sys.exit(app.exec_())